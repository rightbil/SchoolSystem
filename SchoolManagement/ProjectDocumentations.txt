-- Project Structure

1. DataAccess ->  respository
2. Presentation - view 
3. Business Logic Layer (?) utility , chg grade

----Database-----------
1. Table Relationship in Code First Implementation

----.Net---------------
1. Virtual in collections
2. ICollection
3. IList
4. ISet
5. Maps
6. Dictioary
7. Arrays
8. Reflection
9. Object
10. MT
11. async/sync 
12. Delegate / Events and callback functions
13. Execution life cycle
14. IEnumerable & IEnumerator
15. Collections
16. ArrayList / IList
17. Performance
18. Services / Consume / Writing Services
19. Read Core a bit
20. HttpContext and Sessions and Cookies
21. Extension Method
22. Anonymouse Object

--Front end basics---
1. Java Script/ Ajax / Jquery
2. HTML/ CSS 
3. Bootstrap
4. CSS
5. D Partial View 


 MVC framework
----Common DP----
1. Repository Pattern

--Testing--
1. Test Methods

--Exceptions----
1. Exception Handling
2. CustomErrors -- ON / OFF / REMOTEONLY

annotaions -on field, method and  class level / serialization or deserialization

Scripting / Concepts

1.	dependency injection
2.	dependency injection container
3.	HttpContext
4.	Alex Wolf/ .Net Framework/ MVC architecture,
    Improve MVC Application Performance
5.	Filters and their types and sequences
6.	Identity framework 2.0
7.	async and wait
8.	application poll {2 kinds}
9.	interfaces
10.	view Engines
11.	IoC / DI
12.	Authorization
13.	HTTP handler 
14.	Modules
15.	View State
16.	View Engine ( Razor) eg. View Method

Reading Alex’s Video on PS
1.	Both MVC and Web forms use HTTP Handler {MVC is built on top of ASP.NET }
2.	MVC is a different way of implementation of the HTTP Handler?

What really happens in MVC Frame Work
 
1)	public class MvcApplication : System.Web.HttpApplication found in global.asax and inherits HttpApplication which is in ASP.NET 
2)	The request life cycle is b/n the  Application Start and Application end life cycle
a.	When does application start kick ? when it gets request –  www.google.com + enter
b.	Application_Start  - we can put any thing we need to happen first. 
c.	It contains
i.	Global filters (? Mule) ,
ii.	RegisterRoute,
iii.Route tables and 
iv.	BundleTable {scripts and css can be here after MVC 4}
3.	The register route - is referring the register route from app-config where we write Controller/ Veiw/ Id etc 
4.	 Routing request try to match the incoming url to the collection in RegisterRoutes
1)	Note: Route are defined / added to the collection before anything happens.
2)	M(what will happen if it did not fine a match – this is the server) how does it get the 404 error.
5. Each of the routes has associated RouteHandler class

6.Adding localazation in the System.web node in the web.config add <globalization culture="en-GB" uiCulture="en-GB"/> ( mule)
How can different contries can see price based on their curruncy ( mule)
Install-Pacakage EntitiyFramework -projectname SportsStore.Domain
